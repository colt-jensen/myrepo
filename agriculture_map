#load packages --------
library(rnassqs)   # — The rnassqs R package was developed in 2015 by Dr. Nicholas Potter at Washington State University and is supported by rOpenSci. This package is not supported by NASS.
#usdanassr # — The usdanassr R package was developed in 2018 by Dr. Robert Dinterman at Ohio State University. This package is not supported by NASS.
#rnass #— This rnass R package was developed in 2015 by Emrah Er at Ankara University. This package is not supported by NASS.
library(tidyUSDA) #— This tidyUSDA R package was developed in 2019 and is supported by NASS.
library(ggplot2)
library(tidyverse)
library(tidycensus)
library(tigris)
options(tigris_use_cache = TRUE)
library(stringr)
library(readxl)
library(broom)
library(sf)
#set WD -------
setwd("~/Dropbox/R/data_vis")

#NASS API key ------
NASS_API_KEY <- read_file('nass-api.txt')
nassqs_auth(key = NASS_API_KEY)

#census api key ------
census_api <- read_file('census_api.txt')
census_api_key(census_api, overwrite = FALSE, install = FALSE)

#USDA adjust parameters ------
tidyUSDA::allCategory %>% head()
tidyUSDA::allGeogLevel %>% head()

nassqs_param_values(param = "state_alpha" , 
                    commodity_desc = "SWEET POTATOES" , 
                    agg_level_desc = "COUNTY" , 
                    unit_desc = "ACRES" , 
                    domain_desc = "TOTAL" , 
                    statisticcat_desc = "AREA HARVESTED" , 
                    prodn_practice_desc = "ALL PRODUCTION PRACTICES")

nc_sweetpotato_params <- list(commodity_desc = "SWEET POTATOES" ,
                              state_alpha = "NC" ,
                              agg_level_desc = "COUNTY" ,
                              unit_desc = "ACRES" , 
                              domain_desc = "TOTAL" , 
                              statisticcat_desc = "AREA HARVESTED" , 
                              prodn_practice_desc = "ALL PRODUCTION PRACTICES")

#this gives you farming acres per county for Maine
me_farm_params <- list(commodity_desc = "FARM OPERATIONS" ,
                              state_alpha = "ME" ,
                              agg_level_desc = "COUNTY" ,
                              unit_desc = "ACRES" , 
                              domain_desc = "TOTAL" , 
                              statisticcat_desc = "AREA OPERATED",
                              class_desc = "ALL Classes",
                              year = "2017")

me_farm_data_raw <- nassqs(me_farm_params)
view(me_farm_data_raw)

me_farm_data_raw$NAME <- str_to_title(me_farm_data_raw$county_name)

me_farm_data_raw$farms <- me_farm_data_raw$Value

#ohio data
oh_farm_params <- list(commodity_desc = "FARM OPERATIONS" ,
                       state_alpha = "OH" ,
                       agg_level_desc = "COUNTY" ,
                       unit_desc = "ACRES" , 
                       domain_desc = "TOTAL" , 
                       statisticcat_desc = "AREA OPERATED",
                       class_desc = "ALL Classes",
                       year = "2017")

oh_farm_data_raw <- nassqs(oh_farm_params)

oh_farm_data_raw$farms <- oh_farm_data_raw$Value

oh_farm_data_raw$NAME <- str_to_title(oh_farm_data_raw$county_name)

#land area -------------
#Source - https://walker-data.com/census-r/census-geographic-data-and-applications-in-r.html
#counties
me_counties <- counties("ME") #ALAND - Land Area (square meters) - Created for statistical purposes only 
#ex. https://www.census.gov/programs-surveys/geography/technical-documentation/records-layout/gaz-record-layouts.html
oh_counties <- counties("OH")

view(me_counties)

plot(me_counties$geometry)

me_counties
#merge datasets ---------
df_merge <- merge(me_counties,me_farm_data_raw,by="NAME")
view(df_merge)

df_merge$farms

df_merge$ATOTAL <- df_merge$ALAND + df_merge$AWATER

df_merge$ALAND
df_merge$aland_acres <- df_merge$ALAND/4046.86
df_merge$aland_acres

df_merge$land_per <- (df_merge$farms/df_merge$aland_acres)*100
df_merge$land_per

df_merge$awater_acres <- df_merge$AWATER/4046.86

df_merge$atotal_acres <- df_merge$ATOTAL/4046.86

df_merge$total_per <- (df_merge$farms/df_merge$atotal_acres)*100
df_merge$total_per

#ohio
df_merge3 <- merge(oh_counties,oh_farm_data_raw,by="NAME")

df_merge3$aland_acres <- df_merge3$ALAND/4046.86
df_merge3$land_per <- (df_merge3$farms/df_merge3$aland_acres)*100
df_merge3$awater_acres <- df_merge3$AWATER/4046.86
df_merge3$ATOTAL <- df_merge3$ALAND+df_merge3$AWATER
df_merge3$atotal_acres <- df_merge3$ATOTAL/4046.86
df_merge3$total_per <- (df_merge3$farms/df_merge3$atotal_acres)*100

view(df_merge3)



#smaller dataframe ------
### import education expenditure data set and assign column names
#merging maine
df = subset(df_merge, select = c(NAME,GEOID,farms,aland_acres,atotal_acres,land_per,total_per))
head(df)

df$FIPS <- df$GEOID

rucc <-read_xls("ruralurbancodes2013.xls")
uic <- read_xls("UrbanInfluenceCodes2013.xls")

df_merge1 <- merge(df,uic,by="FIPS")
df_final25 <- merge(df_merge1, rucc, by="FIPS")
df_final25$pop <- df_final25$Population_2010.x
df_final25
df_final <- subset(df_final25, select = c(NAME,GEOID,farms,aland_acres,atotal_acres,land_per,total_per,RUCC_2013, UIC_2013,pop))
df_final

#merging ohio
df1 = subset(df_merge3, select = c(NAME,GEOID,farms,aland_acres,atotal_acres,land_per,total_per))
head(df1)

df1$FIPS <- df1$GEOID

df_merge3 <- merge(df1,uic,by="FIPS")
df_final35 <- merge(df_merge3, rucc, by="FIPS")
df_final35$pop <- df_final35$Population_2010.x
df_final35
df_final_1 <- subset(df_final35, select = c(NAME,GEOID,farms,aland_acres,atotal_acres,land_per,total_per,RUCC_2013, UIC_2013,pop))
df_final_1

#plotting ------
library(RColorBrewer)
mycolours <- brewer.pal(8, "Blues")
mybreaks <- c(0, 3, 6, 9, 12, 15, 18)
mycolourscheme <- mycolours[findInterval(df_final$total_per, vec = mybreaks)]
plot(df_final$geometry, col = mycolourscheme, main = "Percent of County in Agriculture", cex = 5) 
legend("bottomleft",legend = levels(cut(df_final$total_per, mybreaks)), fill = mycolourscheme, cex = 0.8, title = "% Ag")

range(df_final$total_per)
df_final$geometry

map <- df_final$geometry

class(map)

st_sf(df_final$geometry)

df_final$land_percentage <- df_final$land_per/100

ggplot(df_final) + #[1:3, ]
  geom_sf(aes(fill=land_percentage)) +
  scale_fill_brewer(palette = "OrRd") #+
  #geom_sf_label(aes(label = County_Name.y))

ggplot(df_final_1) + 
  geom_sf(aes(fill=total_per)) 

ggplot(df_final_1) + 
  geom_sf(aes(fill=RUCC_2013)) 

uics <- ggplot(df_final) + 
  geom_sf(aes(fill=UIC_2013)) 


#biscale-------
library(biscale)
library(cowplot)

data <- bi_class(df_final, RUCC_2013, total_per, style = "quantile", dim = 3)

map <- ggplot() + 
  geom_sf(data = data, mapping = aes(fill=bi_class), color = "white", size= 0.1, show.legend = FALSE)+ 
  bi_scale_fill(pal="GrPink", dim = 3) + 
  labs(
    title = "Rurality and Agriculture in Maine ",
    subtitle = "Gray Pink (GrPink) Palette"
  ) +
  bi_theme()

map

legend <- bi_legend(pal = "GrPink",
                    dim = 3,
                    xlab = "Higher RUCC Code",
                    ylab = "Higher acreage in Ag.",
                    size = 6)

finalPlot <- ggdraw() + 
  draw_plot(map, 0,0,1,1)+
  draw_plot(legend,0.2,.65,0.2,0.2)

finalPlot

#ohio
data1 <- bi_class(df_final_1, RUCC_2013, total_per, style = "quantile", dim = 3)

map1 <- ggplot() + 
  geom_sf(data = data1, mapping = aes(fill=bi_class), color = "white", size= 0.1, show.legend = FALSE)+ 
  bi_scale_fill(pal="GrPink", dim = 3) + 
  labs(
    title = "Rurality and Agriculture in Ohio",
    subtitle = "Gray Pink (GrPink) Palette"
  ) +
  bi_theme()

map1

legend <- bi_legend(pal = "GrPink",
                    dim = 3,
                    xlab = "Higher RUCC Code",
                    ylab = "Higher acreage in Ag.",
                    size = 5)

finalPlot1 <- ggdraw() + 
  draw_plot(map1, 0,0,1,1)+
  draw_plot(legend,0.3,.001,0.99,0.2)

finalPlot1
